stages:
  - Build
  - Deploy

Dashboard-Frontend:
  stage: Build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE/backend-staging:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE/backend-staging:$CI_COMMIT_SHA"


Deploy-Frontend:
  stage: Deploy
  image: registry.dev.cncf.ci/cncf/cncf-ci-dashboard:helm
  script:
    - /helm/entrypoint.sh
    - export KUBECONFIG=/kubeconfig
    - helm init
    - helm repo add cncf http://cncf.gitlab.io/stable
    - helm upgrade nginx-staging --install --force stable/nginx-ingress
    - helm install --name db-staging stable/postgresql --install --force --set postgresUser=backend,postgresPassword=secretbackend,postgresDatabase=backend --set service.type=ClusterIP --set imageTag=9.6
    - helm upgrade backend-staging cncf/backend --install --force --set db.user=backend --set db.password=secretbackend --set db.name=backend --set db.host=db-staging-postgresql --set db.pool=5 --set api=https://gitlab.dev.cncf.ci/api/v4 --set token="$GITLAB_TOKEN" --set imagePullSecrets=devsecret --set yaml=https://gitlab.cncf.ci/cncf/cross-cloud/raw/ci-stable-v0.1.0/cross-cloud.yml --set ingress.host=stagingapi.cncf.ci --set ingress.port=4001 --set image.repository="$CI_REGISTRY_IMAGE/backend-staging" --set image.tag="$CI_COMMIT_SHA"
    - sleep 2 #Wait for old Deployment to start terminating.
    - until [ ! -e $(kubectl get pods -l k8s-app=backend-staging -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status}' | grep "Ready=True") ] ; do echo waiting for deployment ; done

